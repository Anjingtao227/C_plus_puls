#include <iostream>
using namespace std;
int main()
{
	int arr1[2] = { 10,20 };
	int* p = arr1;
	// 定义指针数组p1每一个元素都是int类型的指针变量
	int* p1[5];

	int number = 10;
	p1[0] = &number;
	cout << *p1[0] << endl;

	// 利用指针数组来处理二维数组
	int arr[2][3] = { 
		{10,20,30},
		{40,50,60}
	};
	int* p2[2];
	// arr[0]就是二维数组的第一个元素，也就是第一个一维数组，所以arr[0]就是二维数组中第一个数组的首地址
	p2[0] = arr[0];
	// arr[0]就是二维数组的第二个元素，也就是第二个一维数组，所以arr[1]就是二维数组中第二个数组的首地址
	p2[1] = arr[1];

	for (int i = 0; i < 2; i++)
	{
		for (int j = 0; j < 3; j++)
		{
			// p2[i]相当于获取二维数组中的每一行一维数组的首地址 p2[i][j]就是获取每一行的元素
			//cout << p2[i][j] << " ";

			// p2[i]相当于获取的是二维数组的每一行的首地址p[i]+j，就是那每一行的首地址来进行指针运算符
			// *(p2[i] + j) 是对指针运算完的结果进行解引用的操作，才能获取到元素值
			//cout << *(p2[i] + j) << endl;
		}
	}

	return 0;
}