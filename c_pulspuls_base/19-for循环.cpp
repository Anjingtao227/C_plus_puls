#include <iostream>
using namespace std;
int main()
{
	/*
	for(初始化循环变量; 循环条件; 操作表达式)
	{
		循环体;
	}
	*/
	//int i;
	//// 有初始化循环变量之后，先进行条件判断，确定是否执行循环体，循环体执行完毕之后再执行操作表达式
	//// 然后再去判断循环条件，直到条件不满足，就退出循环
	//for (i = 1; i <= 10; i++)
	//{
	//	cout << i << endl;
	//}
	//cout << "-------------" << endl;
	//cout << i << endl; // 11

	//// 练习：计算1~20之间所有的偶数和
	//int sum = 0; // 存放累加值
	// 方法1：
	//for (int i = 1; i <= 20; i++)
	//{
	//	if (i % 2 == 0)
	//	{
	//		sum += i;
	//	}
	//}
	//// 方法2：
	//for (int i = 0; i <= 20; i+=2)
	//{
	//	sum += i;
	//}
	//cout << sum << endl;


	/* 任意打印几个星星，每个星星之间用空格隔开
	 * * * * * *
	for (int i = 0; i < 10; i++)
	{
		if (i % 2 == 0)
		{
			cout << " ";
		}
		else
		{
			cout << "*";
		}
	}*/

	//// 双层for循环的核心，就是外层循环执行一次，内层循环全部执行完毕
	//for (int j = 0; j < 3; j++)
	//{
	//	for (int i = 1; i <= 10; i++)
	//	{
	//		cout << i << " ";
	//	}
	//	cout << endl;
	//}

	// 1、打印一个正直角三角形
	/*
	*
	**
	***
	****
	*****
	*/

	for (int i = 1; i <= 5; i++) // 外层控制行数
	{
		for (int j = 0; j < i; j++) // 内层控制每行打印的星星数量
		{
			cout << "*";
		}
		cout << endl;
	}
	 
	//// 2、打印一个倒直角三角形
	///*
	//55555
	//4444
	//333
	//22
	//1
	//*/

	//for (int i = 5; i > 0; i--)
	//{
	//	for (int j = 0; j < i; j++)
	//	{
	//		cout << i;
	//	}
	//	cout << endl;
	//}

	//for (int i = 1; i <= 5; i++)
	//{
	//	for (int j = 5; j >= i; j--)
	//	{
	//		cout << 6 - i;
	//	}
	//	cout << endl;
	//}

	// 3、打印一个等腰三角形
	/*
	    *
	   ***
	  *****
	 *******
	*********
	*/

	for (int i = 1; i <= 5; i++) // 最外层控制行数
	{
		// 内层第一个循环控制空格数量
		for (int j = 0; j < 5 - i; j++)
		{
			cout << " ";
		}
		// 内层的第二个循环控制星星数量
		for (int z = 0; z < 2*i-1; z++)
		{
			cout << "*";
		}
		cout << endl;
	}


	// 4、打印九九乘法表
	// 1 × 1 = 1
	// 1 × 2 = 2		2 × 2 = 4
	// 1 × 3 = 3		2 × 3 = 6		3 × 3 = 9
	//......

	for (int i = 1; i < 10; i++)
	{
		for (int j = 1; j <= i; j++)
		{
			// j是每行的第一个因数，也就是第几列，i是每行第二个因数，也就是第几行
			cout << j << " × " << i << " = " << i * j << "\t";
		}
		cout << "\n";
	}
	return 0;
}