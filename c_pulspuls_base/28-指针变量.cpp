#include <iostream>
using namespace std;
int main()
{
	int a, * p1; // p1只能保存int类型的变量地址
	double b, * p2; // p2只能保存double类型的变量地址
	char c, * p3; //p3只能保存char类型的变量地址

	p1 = &a; //将变量a的地址赋值给指针变量p1
	p2 = &b;
	p3 = &c;

	// 可以使用解引用的方式来寻找指针变量所保存的地址中的空间，来存储数据
	*p1 = 100;
	*p2 = 2.22;
	*p3 = 'A';

	// 通过变量和解引用的方式获取指定内存中的值
	cout << a << " " << b << " " << " " << c << endl;
	cout << *p1 << " " << *p2 << " " << " " << *p3 << endl;

	// 用指针变量和取址符都可以获取相应的内存地址，不同时间运行，系统分配的地址不同
	cout << &a << " " << &b << " " << " " << (int*) & c << endl;
	cout << p1 << " " << p2 << " " << " " << (int*)p3 << endl;

	// p3和&c都会直接输出字符串，因为C++的设定，如果我们想要获取字符指针的具体地址，就需要用int*进行强转，这样就能正常输出地址了。
	cout << (int*)(&c)  << endl;
	return 0;
}