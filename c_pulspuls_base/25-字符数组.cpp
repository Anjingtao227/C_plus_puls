#include <iostream>
using namespace std;
int main()
{

	// 字符数组的定义
	char a[5] = { 'A', 'B', 'c', 'd','e' };
	// 元素个数比数组长度多，就报错
	//char a[5] = { 'A', 'B', 'c', 'd','e','F' };
	// 元素个数比数组长度短，就用空字符来补全
	//char b[5] = { 'A', 'B', 'c', 'd'};

	// 元素个数和数组长度相同，长度可以省略不写
	char c[] = { 'A', 'B', 'c', 'd'};
	//for (int i = 0; i < 4; i++)
	//{
	//	cout << c[i] << ",";
	//}

	// 整型数组名可以获取数组的首地址
	//int arr[10];
	//cout << arr << endl;
	// 通过字符数组名（数组的首地址）可以直接输出整个字符串
	char c1[5] = { 'A','B','C','D' }; // 字符的个数一般要比数组长度少一个，因为最后一个要让系统自动补结束标识'\0'
	

	// 通过字符串来直接初始化字符数组
	// 如果用字符串来初始化字符数组，要求字符数组的长度比字符串的字符数要多一，因为要存放结束标识
	// 当然数组长度也可以直接省略，系统会自动分配数组长度
	//char c2[8] = "abcdefg";
	//cout << c2 << endl;

	// 如何获取和修改字符数组中的元素
	//cout << c2[2] << endl; // 获取数组中的第三个元素
	//c2[2] = 'C'; // 修改数组中的第三个元素为C
	//cout << c2 << endl;

	// 将第四个元素直接换成结束标识
	//c2[3] = '\0';
	//cout << c2 << endl;

	// 利用结束标识来获取字符串的长度
	char c3[] = "asdasdd";
	int count = 0, i =0;
	//while (c3[i] != '\0')
	//{
	//	count++;
	//	i++;
	//}

	for (i = 0; c3[i] != '\0'; i++)
	{
		count++;
	}
	cout << i << endl;

	cout << strlen(c3);
	return 0;
}